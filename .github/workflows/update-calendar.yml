name: Update Calendar Events

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  update-events:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Fetch Calendar Events
      env:
        GOOGLE_CALENDAR_API_KEY: ${{ secrets.GOOGLE_CALENDAR_API_KEY }}
        CALENDAR_ID: ${{ secrets.CALENDAR_ID }}
      run: |
        # Create data directory
        mkdir -p data
        
        # Get current date and 3 months from now
        START_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        END_DATE=$(date -u -d "+3 months" +"%Y-%m-%dT%H:%M:%SZ")
        
        # Fetch events from Google Calendar API
        curl -s "https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${GOOGLE_CALENDAR_API_KEY}&timeMin=${START_DATE}&timeMax=${END_DATE}&singleEvents=true&orderBy=startTime&maxResults=50" \
          > data/calendar-events.json
        
        # Create a simple events.json with processed data
        node -e "
        const fs = require('fs');
        const data = JSON.parse(fs.readFileSync('data/calendar-events.json', 'utf8'));
        
        const processedEvents = data.items ? data.items.map(event => ({
          id: event.id,
          title: event.summary || 'Untitled Event',
          description: event.description || '',
          start: event.start.dateTime || event.start.date,
          end: event.end.dateTime || event.end.date,
          location: event.location || '',
          htmlLink: event.htmlLink || '',
          created: event.created,
          updated: event.updated
        })) : [];
        
        const output = {
          lastUpdated: new Date().toISOString(),
          events: processedEvents
        };
        
        fs.writeFileSync('data/events.json', JSON.stringify(output, null, 2));
        console.log('Processed', processedEvents.length, 'events');
        "
        
        # Check if we have events
        if [ ! -f "data/events.json" ]; then
          echo "Failed to create events.json"
          exit 1
        fi
    
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        git diff --staged --quiet || git commit -m "Update calendar events - $(date)"
        git push